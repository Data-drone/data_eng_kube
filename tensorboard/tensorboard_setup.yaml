
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorboard
  namespace: tensorboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tensorboard
  template:
    metadata:
      labels:
        app: tensorboard
    spec:
      containers:
      - name: tensorboard
        command: ["/bin/sh", "-c"]
        args: ["tensorboard --logdir=s3://dl-logs/test-model/resnet/ --bind_all --path_prefix=/tensorboard"]
        image: k3d--registry:5000/datadrone/tfio_tensorboard
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom: { secretKeyRef: { name: minio-secret, key: minio-root-user } }
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom: { secretKeyRef: { name: minio-secret, key: minio-root-password } }
        - name: S3_ENDPOINT
          valueFrom: { configMapKeyRef: { name: minio-endpoint-configmap, key: minio_endpoint } }
        - name: S3_VERIFY_SSL
          value: '0'
        - name: S3_USE_HTTPS
          value: '0' 
        ports:
        - name: http
          containerPort: 6006
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tensorboard
  name: tensorboard-service
  namespace: tensorboard
spec:
  type: ClusterIP
  ports:
  - port: 6006
    protocol: TCP
    name: http
  selector:
    app: tensorboard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tensorboard-ingress
  namespace: tensorboard
spec:
  rules:
  - http:
      paths:
        - path: /tensorboard
          pathType: Prefix
          backend:
            service:
              name: tensorboard-service
              port:
                number: 6006